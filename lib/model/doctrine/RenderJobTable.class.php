<?php

/**
 * RenderJobTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RenderJobTable extends Doctrine_Table
{
	private $formatMapping = array('png' => 'image', 'jpg' => 'image', 'pdf' => 'pdf', 'ps' => 'pdf', 'docx' => 'word');
	private $defaultParams = array('format' => 'jpg');
	
    /**
     * Returns an instance of this class.
     *
     * @return object RenderJobTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('RenderJob');
    }
    
	public function getNextJob() {
		return  $this->createQuery('j')
			 	->where('j.process_started_at IS NULL OR j.accessed_at > j.process_started_at OR j.status = "waiting"')
			 	->andWhere('j.status != "failed"')
		    	->limit(1)
		    	->orderBy('j.accessed_at DESC')
		    	->execute()
		    	->getFirst();
	}
	
	public function createNewJob($params) {
		// set default values
		if (is_array($params)) {
			$params = array_merge($this->defaultParams, $params);
		} else {
			$params = $this->defaultParams;
		}  				
  		
  		// retrieve if exists, if not create new
		$job = $this->findOneBy("hash", sha1(json_encode($params)));		
	  	if(!$job) {  	
		    $job = new RenderJob();
		    $job->setParams(json_encode($params));
			$job->setHash(sha1(json_encode($params)));			
	  		$job->setAccessedAt(date('Y-m-d H:i:s'));		  			  		  	
	  	    if (!array_key_exists($params['format'], $this->formatMapping)) {
	  			$job->setStatus('failed');
	  			$job->setErrorMessage('The provided parameter FORMAT:'.$params['format'].' is not valid');	  		
				$job->setPath('images/could-not-render.png');
	  		} else {
				$job->setType($this->formatMapping[$params['format']]);	
				$job->setStatus('new');				  				
				$job->setPath('images/not-yet-rendered.png');
	  		}	  		
			$job->save();
	  	} else if(time() - strtotime($job->getAccessedAt()) > 30) {
	  		$job->setAccessedAt(date('Y-m-d H:i:s'));	
	  		if ($job->getStatus() != 'failed') {
				$job->setStatus('queued');	
	  		}		  		  		
			$job->save();
		}			
		return $job;
	}
}